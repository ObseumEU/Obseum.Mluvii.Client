name: Build and Publish NuGet

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: windows-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0'

    - name: Restore dependencies
      run: dotnet restore src/ObseumEU.Mluvii.Client/ObseumEU.Mluvii.Client.csproj

    - name: Build
      run: dotnet build src/ObseumEU.Mluvii.Client/ObseumEU.Mluvii.Client.csproj --configuration Release --no-restore

    - name: Pack
      run: dotnet pack src/ObseumEU.Mluvii.Client/ObseumEU.Mluvii.Client.csproj --no-build --configuration Release /p:PackageVersion=1.${{ github.run_number }} -o nupkg

    # List files in the package directory
    - name: List files in the nupkg directory
      run: ls nupkg

    # Push NuGet Package
    - name: Push to nugetorg
      run: Get-ChildItem nupkg -Filter *.nupkg | Foreach-Object { dotnet nuget push $_.FullName --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY  }} --skip-duplicate }
      env:
        GITHUB_TOKEN : ${{ secrets.NUGET_API_KEY  }}

    - name: Push github nuget
      run: Get-ChildItem nupkg -Filter *.nupkg | Foreach-Object { dotnet nuget push $_.FullName --source https://nuget.pkg.github.com/ObseumEU/index.json --api-key ${{ secrets.GITHUB_TOKEN  }} --skip-duplicate }
      env:
        GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN  }}

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 1.${{ github.run_number }}
        release_name: Release 1.${{ github.run_number }}
        draft: false
        prerelease: false